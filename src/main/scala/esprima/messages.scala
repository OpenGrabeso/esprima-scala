/*
ScalaFromJS: 2017-12-05 14:34:17.395
messages.js
*/

package esprima

// Error messages should be identical to V8.
object Messages {
  var BadImportCallArity = "Unexpected token"
  var BadGetterArity = "Getter must not have any formal parameters"
  var BadSetterArity = "Setter must have exactly one formal parameter"
  var BadSetterRestParameter = "Setter function argument must not be a rest parameter"
  var ConstructorIsAsync = "Class constructor may not be an async method"
  var ConstructorSpecialMethod = "Class constructor may not be an accessor"
  var DeclarationMissingInitializer = "Missing initializer in %0 declaration"
  var DefaultRestParameter = "Unexpected token ="
  var DefaultRestProperty = "Unexpected token ="
  var DuplicateBinding = "Duplicate binding %0"
  var DuplicateConstructor = "A class may only have one constructor"
  var DuplicateProtoProperty = "Duplicate __proto__ fields are not allowed in object literals"
  var ForInOfLoopInitializer = "%0 loop variable declaration may not have an initializer"
  var GeneratorInLegacyContext = "Generator declarations are not allowed in legacy contexts"
  var IllegalBreak = "Illegal break statement"
  var IllegalContinue = "Illegal continue statement"
  var IllegalExportDeclaration = "Unexpected token"
  var IllegalImportDeclaration = "Unexpected token"
  var IllegalLanguageModeDirective = "Illegal \'use strict\' directive in function with non-simple parameter list"
  var IllegalReturn = "Illegal return statement"
  var InvalidEscapedReservedWord = "Keyword must not contain escaped characters"
  var InvalidHexEscapeSequence = "Invalid hexadecimal escape sequence"
  var InvalidLHSInAssignment = "Invalid left-hand side in assignment"
  var InvalidLHSInForIn = "Invalid left-hand side in for-in"
  var InvalidLHSInForLoop = "Invalid left-hand side in for-loop"
  var InvalidModuleSpecifier = "Unexpected token"
  var InvalidRegExp = "Invalid regular expression"
  var LetInLexicalBinding = "let is disallowed as a lexically bound name"
  var MissingFromClause = "Unexpected token"
  var MultipleDefaultsInSwitch = "More than one default clause in switch statement"
  var NewlineAfterThrow = "Illegal newline after throw"
  var NoAsAfterImportNamespace = "Unexpected token"
  var NoCatchOrFinally = "Missing catch or finally after try"
  var ParameterAfterRestParameter = "Rest parameter must be last formal parameter"
  var PropertyAfterRestProperty = "Unexpected token"
  var Redeclaration = "%0 \'%1\' has already been declared"
  var StaticPrototype = "Classes may not have static property named prototype"
  var StrictCatchVariable = "Catch variable may not be eval or arguments in strict mode"
  var StrictDelete = "Delete of an unqualified identifier in strict mode."
  var StrictFunction = "In strict mode code, functions can only be declared at top level or inside a block"
  var StrictFunctionName = "Function name may not be eval or arguments in strict mode"
  var StrictLHSAssignment = "Assignment to eval or arguments is not allowed in strict mode"
  var StrictLHSPostfix = "Postfix increment/decrement may not have eval or arguments operand in strict mode"
  var StrictLHSPrefix = "Prefix increment/decrement may not have eval or arguments operand in strict mode"
  var StrictModeWith = "Strict mode code may not include a with statement"
  var StrictOctalLiteral = "Octal literals are not allowed in strict mode."
  var StrictParamDupe = "Strict mode function may not have duplicate parameter names"
  var StrictParamName = "Parameter name eval or arguments is not allowed in strict mode"
  var StrictReservedWord = "Use of future reserved word in strict mode"
  var StrictVarName = "Variable name may not be eval or arguments in strict mode"
  var TemplateOctalLiteral = "Octal literals are not allowed in template strings."
  var UnexpectedEOS = "Unexpected end of input"
  var UnexpectedIdentifier = "Unexpected identifier"
  var UnexpectedNumber = "Unexpected number"
  var UnexpectedReserved = "Unexpected reserved word"
  var UnexpectedString = "Unexpected string"
  var UnexpectedTemplate = "Unexpected quasi %0"
  var UnexpectedToken = "Unexpected token %0"
  var UnexpectedTokenIllegal = "Unexpected token ILLEGAL"
  var UnknownLabel = "Undefined label \'%0\'"
  var UnterminatedRegExp = "Invalid regular expression: missing /"
}
